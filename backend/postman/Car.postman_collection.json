{
	"info": {
		"_postman_id": "4df19a88-45c7-483b-85db-71aa7f8ee899",
		"name": "Car",
		"description": "Test collection for testing car implementation in the backend of the project.\n\n**NB!** An admin user is authenticated in the first test because an admin role is required to send requests in most tests in the test collection.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33041998"
	},
	"item": [
		{
			"name": "ADD login to admin user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"jwt\", pm.response.json()[\"jwt\"]);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{ADMIN_EMAIL}}\",\r\n    \"password\": \"{{ADMIN_PASSWORD}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/authenticate",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all cars",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"size\", pm.response.json().length);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET car with ID 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars/1",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET car with ID 99",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars/99",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET car with ID id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars/id",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"id"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"carId\", pm.response.json())\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"make\": \"Toyota\",\r\n    \"model\": \"Corolla\",\r\n    \"year\": 1966\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/cars",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new car with invalid parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"make\": \"\",\r\n    \"model\": \"Corolla\",\r\n    \"year\": 1966\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/cars",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new car with parameter on invalid format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"make\": \"Toyota\",\r\n    \"model\": \"Corolla\",\r\n    \"year\": \"year\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/cars",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new car with no parameters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all cars after new car was added",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Car set is incremented\", function () {\r",
							"    pm.expect(pm.response.json().length).to.eql(pm.environment.get(\"size\") + 1);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET new car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars/{{carId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"{{carId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"make\": \"Toyota\",\r\n    \"model\": \"Camry\",\r\n    \"year\": 1982\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/cars/{{carId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"{{carId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new car with invalid parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"make\": \"\",\r\n    \"model\": \"Camry\",\r\n    \"year\": 1982\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/cars/{{carId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"{{carId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE car with ID 99",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"make\": \"Toyota\",\r\n    \"model\": \"Camry\",\r\n    \"year\": 1982\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/cars/99",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE new car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars/{{carId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"{{carId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE car with ID 99",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars/99",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"99"
					]
				}
			},
			"response": []
		}
	]
}