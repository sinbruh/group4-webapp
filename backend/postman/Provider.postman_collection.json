{
	"info": {
		"_postman_id": "e9bea0a5-0d00-499a-87ef-5e3c52340fd6",
		"name": "Provider",
		"description": "Test collection for testing provider implementation in the backend of the project.\n\n**NB!** An admin user is authenticated in the first test because an admin role is required to send requests in most tests in the test collection.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33041998"
	},
	"item": [
		{
			"name": "ADD login to admin user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"jwt\", pm.response.json()[\"jwt\"]);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{ADMIN_EMAIL}}\",\r\n    \"password\": \"{{ADMIN_PASSWORD}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/authenticate",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all providers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"size\", pm.response.json().length);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/providers",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET provider with ID 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/providers/1",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET provider with ID 99",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/providers/99",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET provider with ID id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/providers/id",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"id"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"carId\", pm.response.json())\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"make\": \"Toyota\",\r\n    \"model\": \"Corolla\",\r\n    \"year\": 1966\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/cars",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new configuration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"configId\", pm.response.json())\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"1.6 liter diesel\",\r\n    \"fuelType\": \"Diesel\",\r\n    \"transmissionType\": \"Automatic\",\r\n    \"numberOfSeats\": 5\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/configurations/{{carId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"configurations",
						"{{carId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new provider",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"providerId\", pm.response.json())\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Auto 1-1\",\r\n    \"price\": 500,\r\n    \"location\": \"Trondheim\",\r\n    \"available\": true,\r\n    \"visible\": true\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/providers/{{configId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"{{configId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new provider with invalid parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"\",\r\n    \"price\": 500,\r\n    \"location\": \"Trondheim\",\r\n    \"available\": true,\r\n    \"visible\": true\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/providers/{{configId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"{{configId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new provider with parameter on invalid format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": Auto 1-1,\r\n    \"price\": 500,\r\n    \"location\": \"Trondheim\",\r\n    \"available\": true,\r\n    \"visible\": true\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/providers/{{configId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"{{configId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new provider with no parameters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/providers/{{configId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"{{configId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new provider to configuration with ID 99",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Auto 1-1\",\r\n    \"price\": 500,\r\n    \"location\": \"Trondheim\",\r\n    \"available\": true,\r\n    \"visible\": true\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/providers/99",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all providers after new provider was added",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Provider set is incremented\", function () {\r",
							"    pm.expect(pm.response.json().length).to.eql(pm.environment.get(\"size\") + 1);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/providers",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET new provider",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/providers/{{providerId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"{{providerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET new car after new extra feature was added",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Configuration set in car is not empty\", function () {\r",
							"    pm.expect(pm.response.json()[\"configurations\"].length).to.be.above(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars/{{carId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"{{carId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET new configuration after new provider was added",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Provider set in configuration is not empty\", function () {\r",
							"    pm.expect(pm.response.json()[\"providers\"].length).to.be.above(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/configurations/{{configId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"configurations",
						"{{configId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new provider",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Auto 5-5\",\r\n    \"price\": 800,\r\n    \"location\": \"Oslo\",\r\n    \"available\": true,\r\n    \"visible\": true\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/providers/{{providerId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"{{providerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new provider with invalid parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"\",\r\n    \"price\": 800,\r\n    \"location\": \"Oslo\",\r\n    \"available\": true,\r\n    \"visible\": true\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/providers/{{providerId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"{{providerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE provider with ID 99",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Auto 5-5\",\r\n    \"price\": 800,\r\n    \"location\": \"Oslo\",\r\n    \"available\": true,\r\n    \"visible\": true\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/providers/99",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE new provider",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/providers/{{providerId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"{{providerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE provider with ID 99",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/providers/99",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new provider again",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"providerId\", pm.response.json())\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Auto 2-2\",\r\n    \"price\": 400,\r\n    \"location\": \"Bergen\",\r\n    \"available\": true,\r\n    \"visible\": false\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/providers/{{configId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"{{configId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD register new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"johndoe@user.com\",\r\n    \"phoneNumber\": 12345678,\r\n    \"password\": \"iamatestuser\",\r\n    \"dateOfBirth\": 315532800000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/register",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD login to new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"email\", JSON.parse(pm.request.body.raw)[\"email\"]);\r",
							"\r",
							"pm.environment.set(\"jwt\", pm.response.json()[\"jwt\"]);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"johndoe@user.com\",\r\n    \"password\": \"iamatestuser\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/authenticate",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET new provider again",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403 FORBIDDEN\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/providers/{{providerId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"{{providerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD login to admin user again",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"jwt\", pm.response.json()[\"jwt\"]);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{ADMIN_EMAIL}}\",\r\n    \"password\": \"{{ADMIN_PASSWORD}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/authenticate",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE new provider again",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/providers/{{providerId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"{{providerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE new configuration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/configurations/{{configId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"configurations",
						"{{configId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE new car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars/{{carId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"{{carId}}"
					]
				}
			},
			"response": []
		}
	]
}