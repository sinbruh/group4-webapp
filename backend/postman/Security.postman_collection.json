{
	"info": {
		"_postman_id": "4113a167-2d47-45c8-a85d-bc592d4472fd",
		"name": "Security",
		"description": "Test collection for testing security implementation in the backend of the project.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33041998"
	},
	"item": [
		{
			"name": "GET all cars with no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"size\", pm.response.json().length);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/api/cars",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET car with ID 1 with no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/api/cars/1",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD car with no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401 UNAUTHORIZED\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"make\": \"Toyota\",\r\n    \"model\": \"Corolla\",\r\n    \"year\": 1966\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/cars",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE car with ID 1 with no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401 UNAUTHORIZED\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/api/cars/1",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD login to admin user with invalid password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401 UNAUTHORIZED\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"admin@user.com\",\r\n    \"password\": \"adminuser123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/authenticate",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD login to admin user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"jwt\", pm.response.json()[\"jwt\"])\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"admin@user.com\",\r\n    \"password\": \"adminuser\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/authenticate",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD car with admin user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"make\": \"Toyota\",\r\n    \"model\": \"Corolla\",\r\n    \"year\": 1966\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/cars",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all cars after new car was added with admin user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Data set is incremented\", function () {\r",
							"    pm.expect(pm.response.json().length).to.eql(pm.environment.get(\"size\") + 1);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"id\", jsonData[jsonData.length - 1][\"id\"]);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET new car with admin user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars/{{id}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE new car with admin user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars/{{id}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD register user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"email\", JSON.parse(pm.request.body.raw)[\"email\"])\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"johndoe@user.com\",\r\n    \"phoneNumber\": 12345678,\r\n    \"password\": \"iamatestuser\",\r\n    \"dateOfBirth\": \"315532800000\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/register",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET new user with no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401 UNAUTHORIZED\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new user with no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401 UNAUTHORIZED\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Jane\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"janedoe@user.com\",\r\n    \"phoneNumber\": 12345678,\r\n    \"dateOfBirth\": 631152000000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/user/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"user",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new user password with no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401 UNAUTHORIZED\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\"iamanothertestuser\"\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/password/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"password",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE new user with no user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401 UNAUTHORIZED\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET new user with admin user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new user with admin user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"email\", JSON.parse(pm.request.body.raw)[\"email\"])\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Jane\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"janedoe@user.com\",\r\n    \"phoneNumber\": 12345678,\r\n    \"dateOfBirth\": 631152000000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/user/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"user",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new user password with admin user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\"iamanothertestuser\"\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/password/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"password",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE new user with admin user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD register user again",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"email\", JSON.parse(pm.request.body.raw)[\"email\"])\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"johndoe@user.com\",\r\n    \"phoneNumber\": 12345678,\r\n    \"password\": \"iamatestuser\",\r\n    \"dateOfBirth\": \"315532800000\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/register",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD login to new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"jwt\", pm.response.json()[\"jwt\"])\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"johndoe@user.com\",\r\n    \"password\": \"iamatestuser\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/authenticate",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET new user with new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new user with new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"email\", JSON.parse(pm.request.body.raw)[\"email\"])\r",
							"pm.environment.set(\"jwt\", pm.response.json()[\"jwt\"])\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Jane\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"janedoe@user.com\",\r\n    \"phoneNumber\": 12345678,\r\n    \"dateOfBirth\": 631152000000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/user/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"user",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new user password with new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\"iamanothertestuser\"\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/password/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"password",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE new user with new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		}
	]
}