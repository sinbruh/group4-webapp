{
	"info": {
		"_postman_id": "90cb9ff3-69cc-4203-9dac-3bc5c26ce37e",
		"name": "User",
		"description": "Test collection for testing user implementation in the backend of the project.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33041998"
	},
	"item": [
		{
			"name": "ADD login to admin user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"jwt\", pm.response.json()[\"jwt\"]);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{ADMIN_EMAIL}}\",\r\n    \"password\": \"{{ADMIN_PASSWORD}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/authenticate",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"size\", pm.response.json().length);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD register new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"johndoe@user.com\",\r\n    \"phoneNumber\": 12345678,\r\n    \"password\": \"iamatestuser\",\r\n    \"dateOfBirth\": 315532800000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/register",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD register new user with invalid email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"\",\r\n    \"phoneNumber\": 12345678,\r\n    \"password\": \"iamatestuser\",\r\n    \"dateOfBirth\": 315532800000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/register",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD register new user with already used email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"admin@user.com\",\r\n    \"phoneNumber\": 12345678,\r\n    \"password\": \"iamatestuser\",\r\n    \"dateOfBirth\": 315532800000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/register",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD register new user with bad password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"johndoe@user.com\",\r\n    \"phoneNumber\": 12345678,\r\n    \"password\": \"test\",\r\n    \"dateOfBirth\": 315532800000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/register",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD register new user with parameter on invalid format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": John,\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"johndoe@user.com\",\r\n    \"phoneNumber\": 12345678,\r\n    \"password\": \"iamatestuser\",\r\n    \"dateOfBirth\": 315532800000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/register",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD register new user with no parameters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/api/register",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all users after new user was added",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"User set is incremented\", function () {\r",
							"    pm.expect(pm.response.json().length).to.eql(pm.environment.get(\"size\") + 1);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD login to new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"email\", JSON.parse(pm.request.body.raw)[\"email\"])\r",
							"\r",
							"pm.environment.set(\"jwt\", pm.response.json()[\"jwt\"]);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"johndoe@user.com\",\r\n    \"password\": \"iamatestuser\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/authenticate",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET user with email invalid@user.com",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/invalid@user.com",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"invalid@user.com"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"email\", JSON.parse(pm.request.body.raw)[\"email\"])\r",
							"\r",
							"pm.environment.set(\"jwt\", pm.response.json()[\"jwt\"]);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Jane\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"janedoe@user.com\",\r\n    \"phoneNumber\": 87654321,\r\n    \"dateOfBirth\": 631152000000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new user with invalid parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"janedoe@user.com\",\r\n    \"phoneNumber\": 87654321,\r\n    \"dateOfBirth\": 631152000000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new user with parameter on invalid format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": Jane,\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"janedoe@user.com\",\r\n    \"phoneNumber\": 87654321,\r\n    \"dateOfBirth\": 631152000000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new user with no parameters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new user with already used email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Jane\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"admin@user.com\",\r\n    \"phoneNumber\": 87654321,\r\n    \"dateOfBirth\": 631152000000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE user with email invalid@user.com",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Jane\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"janedoe@user.com\",\r\n    \"phoneNumber\": 87654321,\r\n    \"dateOfBirth\": 631152000000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/invalid@user.com",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"invalid@user.com"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new user password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"password\": \"iamanothertestuser\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}/password",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE new user password with bad password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"password\": \"test\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}/password",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE user password with password on invalid format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"password\": iamanothertestuser\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}/password",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE user password with no password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}/password",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE user password for user with email invalid@user.com",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"password\": \"iamanothertestuser\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/users/invalid@user.com/password",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"invalid@user.com",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD login to admin user again",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"jwt\", pm.response.json()[\"jwt\"]);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{ADMIN_EMAIL}}\",\r\n    \"password\": \"{{ADMIN_PASSWORD}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/authenticate",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"carId\", pm.response.json())\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"make\": \"Toyota\",\r\n    \"model\": \"Corolla\",\r\n    \"year\": 1966\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/cars",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new configuration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"configId\", pm.response.json())\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"1.6 liter diesel\",\r\n    \"fuelType\": \"Diesel\",\r\n    \"transmissionType\": \"Automatic\",\r\n    \"numberOfSeats\": 5\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/configurations/{{carId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"configurations",
						"{{carId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD new provider",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 CREATED\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"providerId\", pm.response.json())\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Auto 1-1\",\r\n    \"price\": 500,\r\n    \"location\": \"Trondheim\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/providers/{{configId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"{{configId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD login to new user again",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"email\", JSON.parse(pm.request.body.raw)[\"email\"])\r",
							"\r",
							"pm.environment.set(\"jwt\", pm.response.json()[\"jwt\"]);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"janedoe@user.com\",\r\n    \"password\": \"iamanothertestuser\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/authenticate",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET new user again",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"size\", pm.response.json()[\"favorites\"].length);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE favorites for new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/favorite/{{providerId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"favorite",
						"{{providerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE favorites for new user with provider with ID 99",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/favorite/99",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"favorite",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE favorites for new user with provider with ID id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 BAD REQUEST\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/favorite/id",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"favorite",
						"id"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET new user after favorites were updated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Favorite set is incremented\", function () {\r",
							"    pm.expect(pm.response.json()[\"favorites\"].length).to.eql(pm.environment.get(\"size\") + 1);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE favorites for new user again",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/favorite/{{providerId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"favorite",
						"{{providerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/{{email}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD login to admin user once again",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"jwt\", pm.response.json()[\"jwt\"]);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{ADMIN_EMAIL}}\",\r\n    \"password\": \"{{ADMIN_PASSWORD}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/authenticate",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE user with email invalid@user.com",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/users/invalid@user.com",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"users",
						"invalid@user.com"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE new provider",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/providers/{{providerId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"providers",
						"{{providerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE new configuration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/configurations/{{configId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"configurations",
						"{{configId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE new car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt}}"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/api/cars/{{carId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"cars",
						"{{carId}}"
					]
				}
			},
			"response": []
		}
	]
}